name: publish frmamework nuget

on:
  workflow_call:
    inputs:
      projfile:
        description: 'The path to the project file to be built'
        default: 'MISSING PROJECT FILE'
        required: true
        type: string
      solutionfile:
        description: 'The solution file'
        default: ''
        required: false
        type: string
      pushtomyget:
        description: 'If we shall push the nuget to myget'
        default: true
        required: false
        type: boolean
      testproject:
        description: 'Test project'
        default: ''
        required: false
        type: string
      testassembly:
        description: 'test assembly to test'
        default: ''
        required: false
        type: string      
    secrets:
      NUGET_SOURCES: 
        required: true
      MYGET_FEED_SERVER:
        required: true
      MYGET_API_KEY:
        required: true
      MYGET_SYMBOLS_FEED_SERVER:
        required: true
      MYGET_SYMBOLS_API_KEY:
        required: true



jobs:
  pack-and-push:
    runs-on: [self-hosted, windows]

    steps:
    - uses: actions/checkout@v1
      name: Checkout Code
     
    - name: Setup MSBuild Path
      uses: microsoft/setup-msbuild@v1
     
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      
    - name: Restore NuGet Packages
      run: nuget restore ${{ inputs.solutionfile}} -source "${{secrets.NUGET_SOURCES}}" 
  
    - name: Build tests 
      if: ${{ inputs.testproject != '' }}
      run: msbuild ${{inputs.testproject}} /p:Configuration=Release
      
    - name: Run tests 
      if: ${{ inputs.testassembly != '' }}
      run: dotnet vstest ${{inputs.testassembly}}
      
    - name: Build 
      run: msbuild ${{inputs.projfile}} /p:Configuration=Release /t:Rebuild

    - name: pack project 
      run: >
        nuget pack ${{inputs.projfile}} 
        -Prop Configuration=Release 
        -version 3.0.${{ github.run_number }}
        -OutputDirectory pub

    - name: Publish the package to myget
      if: ${{ inputs.pushtomyget == true }}
      run: >
        dotnet nuget push pub\*.nupkg 
        --source ${{secrets.MYGET_FEED_SERVER}} 
        --api-key ${{secrets.MYGET_API_KEY}} 
        --symbol-source ${{secrets.MYGET_SYMBOLS_FEED_SERVER}} 
        -sk ${{secrets.MYGET_SYMBOLS_API_KEY}} 
        --skip-duplicate
