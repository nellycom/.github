name: publish nuget

on:
  workflow_call:
    inputs:
      projfile:
        description: 'The path to the project file to be built'
        default: 'MISSING PROJECT FILE'
        required: true
        type: string
      testprojects:
        description: 'test projects to be run'
        default: ''
        required: false
        type: string
      pushtomyget:
        description: 'If we shall push the nuget to myget'
        default: true
        required: false
        type: boolean
      dotnetversion:
        description: 'If we shall push the nuget to myget'
        default: '5.0.x'
        required: false
        type: string      
        
    secrets:
      NUGET_SOURCE_MYGET: 
        required: true
      MYGET_FEED_SERVER:
        required: true
      MYGET_API_KEY:
        required: true
      MYGET_SYMBOLS_FEED_SERVER:
        required: true
      MYGET_SYMBOLS_API_KEY:
        required: true



jobs:
  pack-and-push:
    runs-on: [self-hosted]
    steps:
    - uses: actions/checkout@v1
      name: Checkout Code
     
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ inputs.dotnetversion }} 
      name: Setup dotnet
      
    - name: Run tests 
      if: ${{ inputs.testprojects != '' }}
      run: |
        IFS="," read -a myarray <<< ${{inputs.testprojects}}
        for i in "${myarray[@]}"; do
          echo "Value: ${i}"
          dotnet restore ${i} --source ${{secrets.NUGET_SOURCE_MYGET}} --source https://api.nuget.org/v3/index.json
          dotnet test ${i}
        done
   
    - name: pack project 
      run: >
        dotnet pack ${{ inputs.projfile }} 
        /p:Configuration=Release 
        --source ${{secrets.NUGET_SOURCE_MYGET}}  
        --source https://api.nuget.org/v3/index.json
        --include-source 
        -o ./.pub

    - name: Publish the package to myget
      if: ${{ inputs.pushtomyget == true }}
      run: >
        nupkg=./.pub/$(ls ./.pub | grep -Po '.+(?<!symbols.nupkg)$')
        
        dotnet nuget push $nupkg 
        --source ${{secrets.MYGET_FEED_SERVER}} 
        --api-key ${{secrets.MYGET_API_KEY}} 
        --symbol-source ${{secrets.MYGET_SYMBOLS_FEED_SERVER}} 
        -sk ${{secrets.MYGET_SYMBOLS_API_KEY}}
        
